@page "/songlist"
@using Telerik.Blazor.Components
@using ViewModels.Contracts
@inherits SonglistBase

<br />
<TelerikGrid Resizable="true"
             Class="no-scroll"
             Data="@songlist"
             Sortable="true"
             Pageable="true"
             PageSize="20"
             SortMode="@SortMode.Multiple"
             FilterMode="Telerik.Blazor.GridFilterMode.FilterMenu">
    <GridColumns>
        <GridColumn Field="@nameof(ISongViewModel.Name)" Title="Song Name" Editable="true">
            <Template>
                @{
                    IsLikedbyUser = false;
                    var song = context as ISongViewModel;
                    foreach (var item in userSongs)
                    {
                        if (item.SongId == song.SongId)
                        {
                            IsLikedbyUser = true;
                        }
                    }
                    //      if (likedSongs.Contains(song.SongId)) isLikedbyUser = true;
                    <TelerikCheckBox Class="heart-icon k-checkbox" Value="IsLikedbyUser" ValueChanged="@((bool value) => ChangeHandler(value, song.SongId))"></TelerikCheckBox>
                    <a href="/songdetails/@song.Album.Name/@song.SongId">@song.Name</a>
                }
            </Template>
        </GridColumn>
        <GridColumn Field="Album.Name" Title="Album Name">
            <Template>
                @{
                    var album = context as ISongViewModel;
                    <span class="album-text">@album.Album.Name</span>
                }
            </Template>
        </GridColumn>
        <GridColumn Field="Artist.Name" Title="Artist Name">
            <Template>
                @{
                    var artist = context as ISongViewModel;
                    <a href="/artistdetails/@artist.Artist.ArtistId">@artist.Artist.Name</a>
                }
            </Template>
        </GridColumn>
        <GridColumn>
            <Template>
                @{
                    var song = context as ISongViewModel;
                    <button @onclick="@(e => EditSongHandler(song.SongId))">Edit</button>
                    <button @onclick="@(e => DeleteSongHandler(song.SongId))">Delete</button>
                }
            </Template>
        </GridColumn>
    </GridColumns>
</TelerikGrid>
<SongListDataInput></SongListDataInput>


@{
    void DeleteSongHandler(Guid SongId)
    {
        SongIdToEdit = SongId;
        SongWorkflow.DeleteSongById(SongIdToEdit);
        UriHelper.NavigateTo("/songlist", true);
    }

    void EditSongHandler(Guid SongId)
    {
        edit = true;
        SongIdToEdit = SongId;
    }
}
@if (edit)
{
    <SongListDataInput Visible="true" SongId="SongIdToEdit"></SongListDataInput>
}
