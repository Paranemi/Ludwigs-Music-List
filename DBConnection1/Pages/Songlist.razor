@page "/songlist"
@using Telerik.Blazor.Components
@using ViewModels.Contracts
@inherits SonglistBase
<br />
<TelerikGrid Resizable="true"
             Class="no-scroll"
             Data="@songlist"
             Sortable="true"
             Pageable="true"
             PageSize="16"
             SortMode="@SortMode.Multiple"
             FilterMode="Telerik.Blazor.GridFilterMode.FilterMenu"
             OnDelete="@DeleteSongHandler"
             EditMode="GridEditMode.Popup">
    <GridColumns>
        <GridColumn Field="@nameof(ISongViewModel.Name)" Title="Song Name" Editable="true">
            <Template>
                @{
                    var song = context as ISongViewModel;
                    <TelerikCheckBox ValueChanged="@((bool value) => ChangeHandler(value, song.Name))"></TelerikCheckBox>
                    <a href="/songdetails/@song.Album.Name/@song.SongId">@song.Name</a>
                }
            </Template>
        </GridColumn>
        <GridColumn Field="" Title="Album Name">
            <Template>
                @{
                    var album = context as ISongViewModel;
                    <span class="album-text">@album.Album.Name</span>
                }
            </Template>
        </GridColumn>
        <GridColumn Field="" Title="Artist Name">
            <Template>
                @{
                    var artist = context as ISongViewModel;
                    <a href="/artistdetails/@artist.Artist.ArtistId">@artist.Artist.Name</a>
                }
            </Template>
        </GridColumn>
        <GridCommandColumn>
            <GridCommandButton Command="Edit" Icon="edit">Edit</GridCommandButton>
            <GridCommandButton Command="Delete" Icon="delete">Delete</GridCommandButton>        
        </GridCommandColumn>
    </GridColumns>
</TelerikGrid>
<SongListDataInput></SongListDataInput>


@{
    //delegate methode übergben
    //confirmation zurückgeben if else verzweigung
    void DeleteSongHandler(GridCommandEventArgs args)
    {
        var songViewModel = (ISongViewModel)args.Item;
        
        <NotificationWindow Visible="true"></NotificationWindow>
        SongWorkflow.DeleteSongById(songViewModel.SongId);
        UriHelper.NavigateTo("/songlist", true);
    }
}
