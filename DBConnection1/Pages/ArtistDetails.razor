@page "/artistdetails/{ArtistName}"
@using DBConnection1.Data
@using DBConnection1.Models
@*@inherits ArtistDetailsBase*@

<div class="alist-form">
    <img src="./Images/@(ArtistImageUrl).jpg" alt="Alternate Text" />
    <p>@ArtistName was founded in @Founded.</p>
    <br />
    <h6>Members:</h6>
 
    @foreach (var item in persons)
    {
        <img src="./Images/@(PersonImageUrl=item.ImageUrl).jpg" alt="Alternate Text" />
        if (item.To == 0)
        {
            <p>@(FirstName = item.FirstName) @(LastName = item.LastName) since @(From = item.From).</p>
        }
        else
        {
            <p>@(FirstName = item.FirstName) @(LastName = item.LastName) from @(From = item.From) to @(To = item.To).</p>
        }
        
    }
    
</div>

@code{
    [Parameter]
    public string ArtistName { get; set; }
    [Parameter]
    public int Founded { get; set; }
    [Parameter]
    public string PersonImageUrl { get; set; }
    [Parameter]
    public string ArtistImageUrl { get; set; }
    [Parameter]
    public string FirstName { get; set; }
    [Parameter]
    public string LastName { get; set; }
    [Parameter]
    public int From { get; set; }
    [Parameter]
    public int To { get; set; }



    [Inject]
    public AppDataContext AppDataContext { get; set; }

    public List<Artist> artist;
    public List<Person> persons;

    protected override void OnInitialized()
    {
        artist = AppDataContext.Artist.Where(b => b.Name.Contains(ArtistName)).ToList();
        SetElements();
    }
    //public ArtistDetailsBase()
    //{
    //    artist = AppDataContext.Artist.Where(b => b.Name.Contains(ArtistName)).ToList();
    //    SetElements();
    //}

    private void SetElements()
    {
        foreach (var artistDetails in artist)
        {
            Founded = artistDetails.Founded;
            ArtistImageUrl = artistDetails.ArtistImageUrl;
            persons = artistDetails.Persons.ToList();

        }
    }
}